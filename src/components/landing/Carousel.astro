---
title: "Carousel"
layout: "../layouts/Layout.astro"
---

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Carousel</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/daisyui@1.14.0/dist/full.css" rel="stylesheet">
  <style>
    @keyframes slideUp {
      from {
        transform: translateY(100%);
        opacity: 0;
      }
      to {
        transform: translateY(0);
        opacity: 1;
      }
    }

    .animate-slide-up {
      animation: slideUp 1s ease-in-out;
    }

    .carousel-item {
      position: absolute;
      width: 100%;
      height: 100%;
      opacity: 0;
      transition: opacity 0.3s ease, transform 0.3s ease;
      transform: scale(1.1);
    }

    .carousel-item.active {
      opacity: 1;
      transform: scale(1);
      z-index: 1;
    }

    .text-container {
      user-select: text;
      position: relative;
      z-index: 10;
    }

    .carousel-item img {
      pointer-events: none;
      width: 100%;
      height: 100%;
      object-fit: cover;
    }

    .carousel-item .overlay {
      position: absolute;
      inset: 0;
      background: rgba(0, 0, 0, 0.5);
      z-index: 5;
    }

    .carousel-container {
      position: relative;
      width: 100vw;
      height: 100vh;
      overflow: hidden;
    }

    .btn-green {
      background-color: #10b981;
      color: white;
      padding: 0.5rem 1rem;
      border-radius: 0.375rem;
      transition: background-color 0.3s ease;
    }

    .btn-green:hover {
      background-color: #0d8c6d;
    }
  </style>
</head>
<body>
  <div id="carouselExampleCaptions" class="carousel-container" data-twe-carousel-init data-twe-ride="carousel">
    <!-- Carousel indicators -->
    <div class="absolute bottom-0 left-0 right-0 z-[2] mx-[15%] mb-4 flex list-none justify-center p-0" data-twe-carousel-indicators>
      <button type="button" data-twe-target="#carouselExampleCaptions" data-twe-slide-to="0" data-twe-carousel-active class="mx-[3px] box-content h-[3px] w-[30px] flex-initial cursor-pointer border-0 border-y-[10px] border-solid border-transparent bg-white bg-clip-padding p-0 -indent-[999px] opacity-50 transition-opacity duration-[600ms] ease-[cubic-bezier(0.25,0.1,0.25,1.0)] motion-reduce:transition-none" aria-current="true" aria-label="Slide 1"></button>
      <button type="button" data-twe-target="#carouselExampleCaptions" data-twe-slide-to="1" class="mx-[3px] box-content h-[3px] w-[30px] flex-initial cursor-pointer border-0 border-y-[10px] border-solid border-transparent bg-white bg-clip-padding p-0 -indent-[999px] opacity-50 transition-opacity duration-[600ms] ease-[cubic-bezier(0.25,0.1,0.25,1.0)] motion-reduce:transition-none" aria-label="Slide 2"></button>
      <button type="button" data-twe-target="#carouselExampleCaptions" data-twe-slide-to="2" class="mx-[3px] box-content h-[3px] w-[30px] flex-initial cursor-pointer border-0 border-y-[10px] border-solid border-transparent bg-white bg-clip-padding p-0 -indent-[999px] opacity-50 transition-opacity duration-[600ms] ease-[cubic-bezier(0.25,0.1,0.25,1.0)] motion-reduce:transition-none" aria-label="Slide 3"></button>
    </div>

    <!-- Carousel items -->
    <div class="relative w-full h-full overflow-hidden">
      <!-- First item -->
      <div class="carousel-item active" data-twe-carousel-item>
        <img src="/public/images/img2.png" alt="First slide" />
        <div class="overlay"></div>
        <div class="absolute inset-0 flex items-center justify-center p-4 text-white">
          <div class="text-center text-container animate-slide-up">
            <h2 class="text-5xl font-bold mb-2">Cybersecurity</h2>
            <p class="text-2xl mb-4">Putting safety first, we pave the way for your business to surge ahead with confidence and resilience in a digital world.</p>
            <button class="btn-green">Request a Quote</button>
          </div>
        </div>
      </div>
      <!-- Second item -->
      <div class="carousel-item" data-twe-carousel-item>
        <img src="/public/images/crypto2.png" alt="Second slide" />
        <div class="overlay"></div>
        <div class="absolute inset-0 flex items-center justify-center p-4 text-white">
          <div class="text-center text-container animate-slide-up">
            <h2 class="text-5xl font-bold mb-2">Artificial Intelligence</h2>
            <p class="text-2xl mb-4">Empowering Your Business to Thrive with Cutting-Edge Artificial Intelligence Innovations.</p>
            <button class="btn-green">Request a Quote</button>
          </div>
        </div>
      </div>
      <!-- Third item -->
      <div class="carousel-item" data-twe-carousel-item>
        <img src="/public/images/ai1.png" alt="Third slide" />
        <div class="overlay"></div>
        <div class="absolute inset-0 flex items-center justify-center p-4 text-white">
          <div class="text-center text-container animate-slide-up">
            <h2 class="text-5xl font-bold mb-2">Custom Decentralized Application Development</h2>
            <p class="text-2xl mb-4">Building Custom Decentralized Applications to Drive Your Innovation Forward.</p>
            <button class="btn-green">Request a Quote</button>
          </div>
        </div>
      </div>
    </div>

    <!-- Carousel controls - prev item -->
    <button class="absolute bottom-0 left-0 top-0 z-[1] flex w-[15%] items-center justify-center border-0 bg-none p-0 text-center text-white opacity-0 transition-opacity duration-150 ease-[cubic-bezier(0.25,0.1,0.25,1.0)] hover:text-white hover:no-underline hover:opacity-10 hover:outline-none focus:text-white focus:no-underline focus:opacity-10 focus:outline-none motion-reduce:transition-none" type="button" data-twe-target="#carouselExampleCaptions" data-twe-slide="prev">
      <span class="inline-block h-8 w-8">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-6 w-6">
          <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5L8.25 12l7.5-7.5" />
        </svg>
      </span>
      <span class="!absolute !-m-px !h-px !w-px !overflow-hidden !whitespace-nowrap !border-0 !p-0 ![clip:rect(0,0,0,0)]">Previous</span>
    </button>
    <!-- Carousel controls - next item -->
    <button class="absolute bottom-0 right-0 top-0 z-[1] flex w-[15%] items-center justify-center border-0 bg-none p-0 text-center text-white opacity-0 transition-opacity duration-150 ease-[cubic-bezier(0.25,0.1,0.25,1.0)] hover:text-white hover:no-underline hover:opacity-10 hover:outline-none focus:text-white focus:no-underline focus:opacity-10 focus:outline-none motion-reduce:transition-none" type="button" data-twe-target="#carouselExampleCaptions" data-twe-slide="next">
      <span class="inline-block h-8 w-8">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-6 w-6">
          <path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5" />
        </svg>
      </span>
      <span class="!absolute !-m-px !h-px !w-px !overflow-hidden !whitespace-nowrap !border-0 !p-0 ![clip:rect(0,0,0,0)]">Next</span>
    </button>
  </div>

  <script type="module">
    document.addEventListener('DOMContentLoaded', function () {
      const carousel = document.querySelector('#carouselExampleCaptions');
      if (!carousel) return;

      const items = carousel.querySelectorAll('.carousel-item');
      const indicators = carousel.querySelectorAll('[data-twe-carousel-indicators] button');
      let currentIndex = 0;

      const changeSlide = (newIndex) => {
        if (newIndex === currentIndex) return;

        const direction = newIndex > currentIndex ? 'next' : 'prev';
        const currentItem = items[currentIndex];
        const nextItem = items[newIndex];

        nextItem.classList.add(direction);
        requestAnimationFrame(() => {
          currentItem.classList.add('slide');
          nextItem.classList.add('slide');
          if (nextItem instanceof HTMLElement) {
            nextItem.style.transform = 'scale(1)';
            nextItem.style.opacity = '1';
          }

          requestAnimationFrame(() => {
            if (currentItem instanceof HTMLElement) {
              currentItem.style.opacity = '0';
              currentItem.style.transform = 'scale(1.1)';
            }
          });
        });

        nextItem.addEventListener('transitionend', () => {
          currentItem.classList.remove('active', 'slide');
          if (currentItem instanceof HTMLElement) {
            currentItem.style.transform = '';
            currentItem.style.opacity = '';
          }
          nextItem.classList.remove(direction, 'slide');
          nextItem.classList.add('active');
          const textContainer = nextItem.querySelector('.text-container');
          if (textContainer instanceof HTMLElement) {
            textContainer.classList.remove('animate-slide-up');
            void textContainer.offsetWidth; // trigger reflow
            textContainer.classList.add('animate-slide-up');
          }
          currentIndex = newIndex;
        }, { once: true });

        indicators.forEach((indicator, index) => {
          indicator.classList.toggle('opacity-100', index === newIndex);
          indicator.classList.toggle('opacity-50', index !== newIndex);
        });
      };

      const nextSlide = () => {
        const nextIndex = (currentIndex + 1) % items.length;
        changeSlide(nextIndex);
      };

      const prevSlide = () => {
        const prevIndex = (currentIndex - 1 + items.length) % items.length;
        changeSlide(prevIndex);
      };

      indicators.forEach((button, index) => {
        button.addEventListener('click', () => changeSlide(index));
      });

      const nextButton = carousel.querySelector('[data-twe-slide="next"]');
      const prevButton = carousel.querySelector('[data-twe-slide="prev"]');

      if (nextButton) nextButton.addEventListener('click', nextSlide);
      if (prevButton) prevButton.addEventListener('click', prevSlide);

      setInterval(nextSlide, 3000); // Change slide every 3 seconds
    });
  </script>
</body>
